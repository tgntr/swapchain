syntax = "proto3";
package tgntr.swapchain.interchainswap;

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/tgntr/swapchain/x/interchainswap/types";

// Msg defines the Msg service.
service Msg {
      rpc SendQueryOsmosisSpotPrice(MsgSendQueryOsmosisSpotPrice) returns (MsgSendQueryOsmosisSpotPriceResponse);
      rpc RegisterInterchainAccount(MsgRegisterIntechainAccount) returns (MsgRegisterIntechainAccountResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgSendQueryOsmosisSpotPrice {
  string creator = 1;
  string channel_id = 2;
  uint64 pool_id = 3;
  string base_asset_denom = 4;
  string quote_asset_denom = 5;
}

message MsgSendQueryOsmosisSpotPriceResponse {
  uint64 sequence = 1;
}

message MsgRegisterIntechainAccount {
  string owner                      = 1;
  string connection_id              = 2;
  string version                    = 3;
}

message MsgRegisterIntechainAccountResponse {}
// this line is used by starport scaffolding # proto/tx/message